{"version":3,"sources":["AddList.js","ShowCard.js","EditTitle.js","ShowList.js","App.js","reportWebVitals.js","index.js"],"names":["AddList","props","titleInput","className","type","onClick","handleAddTitle","onSubmit","handleSubmit","value","onChange","handleChange","ShowCard","id","onDragEnd","result","console","log","source","destination","draggableId","reson","droppableId","index","arr","cardList","splice","remove","handleSetCard","listId","provided","ref","innerRef","droppableProps","map","t","i","p","draggableProps","dragHandleProps","key","title","placeholder","React","Component","EditTitle","list","editTitle","handleEditTitle","handleDelete","event","preventDefault","handleSave","editTitleValue","handleTitleChange","ShowList","item","edit","handleEdit","handleCardSubmit","editValue","handleChange1","handleCardCancel","App","state","setState","target","newList2","newList6","newList3","push","nanoid","newList4","newList5","val","showList","this","handleCheck","handleTitleSubmit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRA0CeA,G,MApCC,SAAAC,GACd,OAAyB,IAArBA,EAAMC,WAEN,qBAAKC,UAAU,cAAf,SACE,wBAAQC,KAAK,SAASC,QAASJ,EAAMK,eAArC,4BAOF,qBAAKH,UAAU,cAAf,SACE,uBAAMI,SAAUN,EAAMO,aAAtB,UACE,gCACE,uBACEJ,KAAK,OACLK,MAAOR,EAAMQ,MACbC,SAAUT,EAAMU,iBAGpB,wBAAQP,KAAK,SAAb,sBACA,wBAAQA,KAAK,SAASC,QAASJ,EAAMK,eAArC,sB,+BCkEKM,E,uKAxEH,IAAD,OACP,OACE,gCACE,qBAAKC,GAAG,OAAOV,UAAU,aACzB,cAAC,IAAD,CACEW,UAAW,SAAAC,GACTC,QAAQC,IAAIF,GADO,MAEaA,EAAxBG,EAFW,EAEXA,OAAQC,EAFG,EAEHA,YAchB,GAbAJ,EAAS,CACPK,YAAa,EACbhB,KAAM,OACNiB,MAAO,OACPH,OAAQ,CACNI,YAAa,EACbC,MAAO,GAETJ,YAAa,CACXG,YAAa,EACbC,MAAO,IAGNJ,EAAL,CAIA,IAAIK,EAAM,EAAKvB,MAAMwB,SACrBT,QAAQC,IAAI,EAAKhB,MAAMwB,UArBJ,MAsBFD,EAAIE,OAAOR,EAAOK,MAAO,GAAnCI,EAtBY,oBAuBnBH,EAAIE,OAAOP,EAAYI,MAAO,EAAGI,GACjC,EAAK1B,MAAM2B,cAAcJ,EAAK,EAAKvB,MAAM4B,UAzB7C,SA4BE,cAAC,IAAD,CAAWP,YAAY,OAAvB,SACG,SAAAQ,GAAQ,OACP,6CAAKC,IAAKD,EAASE,UAAcF,EAASG,gBAA1C,aACG,EAAKhC,MAAMwB,SAASS,KAAI,SAACC,EAAGC,GAAJ,OACvB,cAAC,IAAD,CAAWhB,YAAae,EAAEtB,GAAIU,MAAOa,EAArC,SACG,SAAAC,GAAC,OACA,mEACEN,IAAKM,EAAEL,UACHK,EAAEC,gBACFD,EAAEE,iBAHR,IAIEC,IAAKL,EAAEtB,KAEP,qBAAKV,UAAU,WAAf,SAA2BgC,EAAEM,QAC7B,qBAAKtC,UAAU,cAAf,SACG2B,EAASY,oC,GA7DbC,IAAMC,WCmCdC,MArCf,SAAmB5C,GACjB,OAA2C,IAAvCA,EAAM6C,KAAK7C,EAAM4B,QAAQkB,UAEzB,gCACE,wBAAQ1C,QAAS,kBAAMJ,EAAM+C,gBAAgB/C,EAAM4B,SAAnD,wBAGA,wBAAQxB,QAAS,kBAAMJ,EAAMgD,aAAahD,EAAM4B,SAAhD,uBAKF,8BACE,uBACEtB,SAAU,SAAA2C,GACRA,EAAMC,iBACNlD,EAAMmD,WAAWnD,EAAM4B,OAAQ5B,EAAMoD,iBAHzC,UAME,gCACE,uBACEjD,KAAK,OACLK,MAAOR,EAAMoD,eACb3C,SAAUT,EAAMqD,sBAIpB,wBAAQlD,KAAK,SAAb,kBACA,wBAAQC,QAAS,kBAAMJ,EAAM+C,gBAAgB/C,EAAM4B,SAAnD,0B,MC6DK0B,MArFf,SAAkBtD,GAChB,OACE,qBAAKE,UAAU,WAAf,SACE,6BACGF,EAAM6C,KAAKZ,KAAI,SAASsB,EAAMpB,GAC7B,OAAkB,IAAdoB,EAAKC,KAEL,qBAAY5C,GAAIuB,EAAhB,UACE,+BAAOoB,EAAKf,QACZ,cAAC,EAAD,CACEhB,SAAUxB,EAAM6C,KAAKV,GAAGX,SACxBqB,KAAM7C,EAAM6C,KACZlB,cAAe3B,EAAM2B,gBAEvB,8BACE,wBAAQvB,QAAS,kBAAMJ,EAAMyD,WAAWtB,IAAxC,4BAIF,cAAC,EAAD,CACEP,OAAQO,EACRU,KAAM7C,EAAM6C,KACZQ,kBAAmBrD,EAAMqD,kBACzBD,eAAgBpD,EAAMoD,eACtBJ,aAAchD,EAAMgD,aACpBD,gBAAiB/C,EAAM+C,gBACvBI,WAAYnD,EAAMmD,eAnBbhB,GAyBT,qBAAYvB,GAAIuB,EAAhB,UACE,+BAAOoB,EAAKf,QACZ,cAAC,EAAD,CACEhB,SAAUxB,EAAM6C,KAAKV,GAAGX,SACxBqB,KAAM7C,EAAM6C,KACZlB,cAAe3B,EAAM2B,cACrBC,OAAQO,IAEV,uBACE7B,SAAU,SAAA2C,GACRA,EAAMC,iBACNlD,EAAM0D,iBAAiBvB,IAH3B,UAME,gCACE,uBACEhC,KAAK,OACLK,MAAOR,EAAM2D,UACblD,SAAUT,EAAM4D,kBAGpB,wBAAQzD,KAAK,SAAb,sBACA,wBAAQC,QAAS,kBAAMJ,EAAM6D,iBAAiB1B,IAA9C,kBAEF,cAAC,EAAD,CACEP,OAAQO,EACRU,KAAM7C,EAAM6C,KACZQ,kBAAmBrD,EAAMqD,kBACzBD,eAAgBpD,EAAMoD,eACtBJ,aAAchD,EAAMgD,aACpBD,gBAAiB/C,EAAM+C,gBACvBI,WAAYnD,EAAMmD,eA/BbhB,W,QC8HR2B,E,kDA5Jb,WAAY9D,GAAQ,IAAD,8BACjB,cAAMA,IAWRK,eAAiB,YACe,IAA1B,EAAK0D,MAAM9D,WACb,EAAK+D,SAAS,CAAE/D,YAAY,IAE5B,EAAK+D,SAAS,CAAE/D,YAAY,KAhBb,EAoBnBS,aAAe,SAAAuC,GACb,EAAKe,SAAS,CAAExD,MAAOyC,EAAMgB,OAAOzD,SArBnB,EAwBnBoD,cAAgB,SAAAX,GACd,EAAKe,SAAS,CAAEL,UAAWV,EAAMgB,OAAOzD,SAzBvB,EA4BnB6C,kBAAoB,SAAAJ,GAClB,EAAKe,SAAS,CAAEZ,eAAgBH,EAAMgB,OAAOzD,SA7B5B,EAgCnBD,aAAe,SAAA0C,GACbA,EAAMC,iBACmB,KAArB,EAAKa,MAAMvD,MACb,EAAKwD,SAAS,CACZxD,MAAO,GACPqC,KAAK,GAAD,mBACC,EAAKkB,MAAMlB,MADZ,CAEF,CACEL,MAAO,EAAKuB,MAAMvD,MAClBgB,SAAU,GACVgC,MAAM,EACNV,WAAW,OAKjB/B,QAAQC,IAAI,KAEdD,QAAQC,IAAI,EAAK+C,MAAMlB,OAlDN,EAqDnBY,WAAa,SAAAtB,GACX,IAAI+B,EAAW,EAAKH,MAAMlB,KAC1BqB,EAAS/B,GAAGqB,MAAO,EACnB,EAAKQ,SAAS,CACZnB,KAAMqB,KAzDS,EA6DnBnB,gBAAkB,SAAAZ,GAChB,IAAIgC,EAAW,EAAKJ,MAAMlB,MACI,IAA1BsB,EAAShC,GAAGW,UACdqB,EAAShC,GAAGW,WAAY,EAExBqB,EAAShC,GAAGW,WAAY,EAE1B,EAAKkB,SAAS,CACZnB,KAAMsB,KArES,EAyEnBN,iBAAmB,SAAA1B,GACjB,IAAIiC,EAAW,EAAKL,MAAMlB,KAC1BuB,EAASjC,GAAGqB,MAAO,EACnB,EAAKQ,SAAS,CACZnB,KAAMuB,KA7ES,EAiFnBV,iBAAmB,SAAAvB,GACjB,GAA6B,KAAzB,EAAK4B,MAAMJ,UAAkB,CAC/B,IAAIS,EAAW,EAAKL,MAAMlB,KAC1BuB,EAASjC,GAAGX,SAAS6C,KAAK,CACxB7B,MAAO,EAAKuB,MAAMJ,UAClB/C,GAAI,KAAO0D,gBAEb,EAAKN,SAAS,CACZL,UAAW,GACXd,KAAMuB,SAGRrD,QAAQC,IAAI,KAEdD,QAAQC,IAAI,EAAK+C,MAAMlB,OA/FN,EAkGnBG,aAAe,SAAAb,GACb,IAAIoC,EAAW,EAAKR,MAAMlB,KAC1B0B,EAAS9C,OAAOU,EAAG,GACnB,EAAK6B,SAAS,CACZnB,KAAM0B,KAtGS,EA0GnB5C,cAAgB,SAACJ,EAAKY,GACpB,IAAIqC,EAAW,EAAKT,MAAMlB,KAC1B2B,EAASrC,GAAGX,SAAWD,EACvB,EAAKyC,SAAS,CACZnB,KAAM2B,IAERzD,QAAQC,IAAI,QAAS,EAAK+C,QAhHT,EAmHnBZ,WAAa,SAAChB,EAAGsC,GACf,IAAID,EAAW,EAAKT,MAAMlB,KAC1B2B,EAASrC,GAAGW,WAAY,EACxB0B,EAASrC,GAAGK,MAAQiC,EACpB,EAAKT,SAAS,CACZnB,KAAM2B,EACNpB,eAAgB,MAvHlB,EAAKW,MAAQ,CACX9D,YAAY,EACZO,MAAO,GACPmD,UAAW,GACXP,eAAgB,GAChBP,KAAM,GACN6B,SAAU,IARK,E,qDA8HjB,OACE,gCACE,cAAC,EAAD,CACEzE,WAAY0E,KAAKZ,MAAM9D,WACvBI,eAAgBsE,KAAKtE,eACrBG,MAAOmE,KAAKZ,MAAMvD,MAClBE,aAAciE,KAAKjE,aACnBH,aAAcoE,KAAKpE,eAErB,cAAC,EAAD,CACEsC,KAAM8B,KAAKZ,MAAMlB,KACjB+B,YAAaD,KAAKC,YAClBjB,UAAWgB,KAAKZ,MAAMJ,UACtBD,iBAAkBiB,KAAKjB,iBACvBE,cAAee,KAAKf,cACpBH,WAAYkB,KAAKlB,WACjBI,iBAAkBc,KAAKd,iBACvBlC,cAAegD,KAAKhD,cACpBqB,aAAc2B,KAAK3B,aACnBK,kBAAmBsB,KAAKtB,kBACxBD,eAAgBuB,KAAKZ,MAAMX,eAC3BL,gBAAiB4B,KAAK5B,gBACtB8B,kBAAmBF,KAAKE,kBACxB1B,WAAYwB,KAAKxB,oB,GAtJTT,IAAMC,WCGTmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c24d846a.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// import styles from \"./css/AddList.module.scss\";\nimport \"./css/AddList.css\";\n\nconst AddList = props => {\n  if (props.titleInput === false) {\n    return (\n      <div className=\"addInputBtn\">\n        <button type=\"button\" onClick={props.handleAddTitle}>\n          + Add a list\n        </button>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"addInputBtn\">\n        <form onSubmit={props.handleSubmit}>\n          <label>\n            <input\n              type=\"text\"\n              value={props.value}\n              onChange={props.handleChange}\n            />\n          </label>\n          <button type=\"submit\">Add list</button>\n          <button type=\"button\" onClick={props.handleAddTitle}>\n            X\n          </button>\n        </form>\n      </div>\n    );\n  }\n};\n\nAddList.propTypes = {\n  value: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired\n};\n\nexport default AddList;\n","import React from \"react\";\n// import PropTypes from \"prop-types\";\n\nimport \"./css/ShowCard.css\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nclass ShowCard extends React.Component {\n  //   return (\n  //     <div className=\"showCard\">\n  //       <ul>\n  //         {props.cardList.map(function(item) {\n  //           return (\n  //             <li key={item.id} id={item.id}>\n  //               <span>{item.title}</span>\n  //             </li>\n  //           );\n  //         })}\n  //       </ul>\n  //     </div>\n  //   );\n\n  render() {\n    return (\n      <div>\n        <div id=\"drag\" className=\"showCard\"></div>\n        <DragDropContext\n          onDragEnd={result => {\n            console.log(result);\n            const { source, destination } = result;\n            result = {\n              draggableId: 1,\n              type: \"TYPE\",\n              reson: \"DROP\",\n              source: {\n                droppableId: 1,\n                index: 0\n              },\n              destination: {\n                droppableId: 1,\n                index: 1\n              }\n            };\n            if (!destination) {\n              return;\n            }\n\n            let arr = this.props.cardList;\n            console.log(this.props.cardList);\n            const [remove] = arr.splice(source.index, 1);\n            arr.splice(destination.index, 0, remove);\n            this.props.handleSetCard(arr, this.props.listId);\n          }}\n        >\n          <Droppable droppableId=\"drag\">\n            {provided => (\n              <div ref={provided.innerRef} {...provided.droppableProps}>\n                {this.props.cardList.map((t, i) => (\n                  <Draggable draggableId={t.id} index={i}>\n                    {p => (\n                      <div\n                        ref={p.innerRef}\n                        {...p.draggableProps}\n                        {...p.dragHandleProps}\n                        key={t.id}\n                      >\n                        <div className=\"dragItem\">{t.title}</div>\n                        <div className=\"placeHolder\">\n                          {provided.placeholder}\n                        </div>\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </div>\n    );\n  }\n}\n\n// ShowCard.propTypes = {\n//   list: PropTypes.array,\n//   handleCheck: PropTypes.func,\n//   handleDelete: PropTypes.func,\n//   handleEdit: PropTypes.func,\n//   editValue: PropTypes.string,\n//   handleSave: PropTypes.func,\n//   handleCancel: PropTypes.func,\n//   handleChange1: PropTypes.func\n// };\n\nexport default ShowCard;\n","import React from \"react\";\n// import PropTypes from \"prop-types\";\n// import { nanoid } from \"nanoid\";\n\nfunction EditTitle(props) {\n  if (props.list[props.listId].editTitle === false) {\n    return (\n      <div>\n        <button onClick={() => props.handleEditTitle(props.listId)}>\n          Edit Title\n        </button>\n        <button onClick={() => props.handleDelete(props.listId)}>Delete</button>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <form\n          onSubmit={event => {\n            event.preventDefault();\n            props.handleSave(props.listId, props.editTitleValue);\n          }}\n        >\n          <label>\n            <input\n              type=\"text\"\n              value={props.editTitleValue}\n              onChange={props.handleTitleChange}\n            />\n          </label>\n\n          <button type=\"submit\">Save</button>\n          <button onClick={() => props.handleEditTitle(props.listId)}>\n            Cancel\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default EditTitle;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ShowCard from \"./ShowCard\";\nimport EditTitle from \"./EditTitle\";\n// import { nanoid } from \"nanoid\";\n\nimport \"./css/ShowList.css\";\n\nfunction ShowList(props) {\n  return (\n    <div className=\"showList\">\n      <ul>\n        {props.list.map(function(item, i) {\n          if (item.edit === false) {\n            return (\n              <li key={i} id={i}>\n                <span>{item.title}</span>\n                <ShowCard\n                  cardList={props.list[i].cardList}\n                  list={props.list}\n                  handleSetCard={props.handleSetCard}\n                />\n                <div>\n                  <button onClick={() => props.handleEdit(i)}>\n                    + Add a card\n                  </button>\n                </div>\n                <EditTitle\n                  listId={i}\n                  list={props.list}\n                  handleTitleChange={props.handleTitleChange}\n                  editTitleValue={props.editTitleValue}\n                  handleDelete={props.handleDelete}\n                  handleEditTitle={props.handleEditTitle}\n                  handleSave={props.handleSave}\n                />\n              </li>\n            );\n          } else {\n            return (\n              <li key={i} id={i}>\n                <span>{item.title}</span>\n                <ShowCard\n                  cardList={props.list[i].cardList}\n                  list={props.list}\n                  handleSetCard={props.handleSetCard}\n                  listId={i}\n                />\n                <form\n                  onSubmit={event => {\n                    event.preventDefault();\n                    props.handleCardSubmit(i);\n                  }}\n                >\n                  <label>\n                    <input\n                      type=\"text\"\n                      value={props.editValue}\n                      onChange={props.handleChange1}\n                    />\n                  </label>\n                  <button type=\"submit\">Add card</button>\n                  <button onClick={() => props.handleCardCancel(i)}>X</button>\n                </form>\n                <EditTitle\n                  listId={i}\n                  list={props.list}\n                  handleTitleChange={props.handleTitleChange}\n                  editTitleValue={props.editTitleValue}\n                  handleDelete={props.handleDelete}\n                  handleEditTitle={props.handleEditTitle}\n                  handleSave={props.handleSave}\n                />\n              </li>\n            );\n          }\n        })}\n      </ul>\n    </div>\n  );\n}\n\nShowList.propTypes = {\n  list: PropTypes.array,\n  handleCheck: PropTypes.func,\n  handleDelete: PropTypes.func,\n  handleEdit: PropTypes.func,\n  editValue: PropTypes.string,\n  handleSave: PropTypes.func,\n  handleChange1: PropTypes.func,\n  handleCardSubmit: PropTypes.func\n};\n\nexport default ShowList;\n","import React from \"react\";\n\nimport AddList from \"./AddList\";\n// import FilterList from \"./FilterList\";\nimport ShowList from \"./ShowList\";\nimport { nanoid } from \"nanoid\";\n\n// import styles from \"./css/App.module.scss\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      titleInput: false,\n      value: \"\",\n      editValue: \"\",\n      editTitleValue: \"\",\n      list: [],\n      showList: []\n    };\n  }\n\n  handleAddTitle = () => {\n    if (this.state.titleInput === false) {\n      this.setState({ titleInput: true });\n    } else {\n      this.setState({ titleInput: false });\n    }\n  };\n\n  handleChange = event => {\n    this.setState({ value: event.target.value });\n  };\n\n  handleChange1 = event => {\n    this.setState({ editValue: event.target.value });\n  };\n\n  handleTitleChange = event => {\n    this.setState({ editTitleValue: event.target.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    if (this.state.value !== \"\") {\n      this.setState({\n        value: \"\",\n        list: [\n          ...this.state.list,\n          {\n            title: this.state.value,\n            cardList: [],\n            edit: false,\n            editTitle: false\n          }\n        ]\n      });\n    } else {\n      console.log(111);\n    }\n    console.log(this.state.list);\n  };\n\n  handleEdit = i => {\n    let newList2 = this.state.list;\n    newList2[i].edit = true;\n    this.setState({\n      list: newList2\n    });\n  };\n\n  handleEditTitle = i => {\n    let newList6 = this.state.list;\n    if (newList6[i].editTitle === false) {\n      newList6[i].editTitle = true;\n    } else {\n      newList6[i].editTitle = false;\n    }\n    this.setState({\n      list: newList6\n    });\n  };\n\n  handleCardCancel = i => {\n    let newList3 = this.state.list;\n    newList3[i].edit = false;\n    this.setState({\n      list: newList3\n    });\n  };\n\n  handleCardSubmit = i => {\n    if (this.state.editValue !== \"\") {\n      let newList3 = this.state.list;\n      newList3[i].cardList.push({\n        title: this.state.editValue,\n        id: \"id\" + nanoid()\n      });\n      this.setState({\n        editValue: \"\",\n        list: newList3\n      });\n    } else {\n      console.log(222);\n    }\n    console.log(this.state.list);\n  };\n\n  handleDelete = i => {\n    let newList4 = this.state.list;\n    newList4.splice(i, 1);\n    this.setState({\n      list: newList4\n    });\n  };\n\n  handleSetCard = (arr, i) => {\n    let newList5 = this.state.list;\n    newList5[i].cardList = arr;\n    this.setState({\n      list: newList5\n    });\n    console.log(\"state\", this.state);\n  };\n\n  handleSave = (i, val) => {\n    let newList5 = this.state.list;\n    newList5[i].editTitle = false;\n    newList5[i].title = val;\n    this.setState({\n      list: newList5,\n      editTitleValue: \"\"\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <AddList\n          titleInput={this.state.titleInput}\n          handleAddTitle={this.handleAddTitle}\n          value={this.state.value}\n          handleChange={this.handleChange}\n          handleSubmit={this.handleSubmit}\n        />\n        <ShowList\n          list={this.state.list}\n          handleCheck={this.handleCheck}\n          editValue={this.state.editValue}\n          handleCardSubmit={this.handleCardSubmit}\n          handleChange1={this.handleChange1}\n          handleEdit={this.handleEdit}\n          handleCardCancel={this.handleCardCancel}\n          handleSetCard={this.handleSetCard}\n          handleDelete={this.handleDelete}\n          handleTitleChange={this.handleTitleChange}\n          editTitleValue={this.state.editTitleValue}\n          handleEditTitle={this.handleEditTitle}\n          handleTitleSubmit={this.handleTitleSubmit}\n          handleSave={this.handleSave}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}